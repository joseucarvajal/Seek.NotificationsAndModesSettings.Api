// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SeekQ.NotificationsAndModesSettings.Api.Infrastructure;

namespace SeekQ.NotificationsAndModesSettings.Api.Migrations
{
    [DbContext(typeof(NotificationsModesSettingsDbContext))]
    [Migration("20201015193433_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SeekQ.NotificationsAndModesSettings.Api.Domain.NotificationsAggregate.NotificationType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("NotificationTypes");
                });

            modelBuilder.Entity("SeekQ.NotificationsAndModesSettings.Api.Domain.NotificationsAggregate.UserNotificationType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("IdNotificationType")
                        .HasColumnName("IdNotificationType")
                        .HasColumnType("int");

                    b.Property<Guid>("IdUser")
                        .HasColumnName("IdUser")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdNotificationType");

                    b.HasIndex("IdUser", "IdNotificationType")
                        .IsUnique();

                    b.ToTable("UserNotificationTypes");
                });

            modelBuilder.Entity("SeekQ.NotificationsAndModesSettings.Api.Domain.UserAggregate.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SeekQ.NotificationsAndModesSettings.Api.Domain.NotificationsAggregate.UserNotificationType", b =>
                {
                    b.HasOne("SeekQ.NotificationsAndModesSettings.Api.Domain.NotificationsAggregate.NotificationType", "NotificationType")
                        .WithMany()
                        .HasForeignKey("IdNotificationType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SeekQ.NotificationsAndModesSettings.Api.Domain.UserAggregate.User", "User")
                        .WithMany()
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
